// <auto-generated />
using System;
using BrewHelper.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrewHelper.Data.Migrations
{
    [DbContext(typeof(BrewhelperContext))]
    partial class BrewhelperContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BrewHelper.Data.Entities.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("BatchSize")
                        .HasColumnType("float");

                    b.Property<double>("BoilSize")
                        .HasColumnType("float");

                    b.Property<double>("BoilTime")
                        .HasColumnType("float");

                    b.Property<string>("Brewer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("BrewHelper.Data.Entities.Recipe", b =>
                {
                    b.OwnsMany("BrewHelper.Data.Entities.Fermentable", "Fermentables", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<double>("Amount")
                                .HasColumnType("float");

                            b1.Property<double>("Color")
                                .HasColumnType("float");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.Property<int>("Version")
                                .HasColumnType("int");

                            b1.Property<double>("Yield")
                                .HasColumnType("float");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("Fermentable");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsMany("BrewHelper.Data.Entities.Hop", "Hops", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<double>("Alpha")
                                .HasColumnType("float");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Time")
                                .HasColumnType("float");

                            b1.Property<int>("Use")
                                .HasColumnType("int");

                            b1.Property<int>("Version")
                                .HasColumnType("int");

                            b1.Property<double>("Weight")
                                .HasColumnType("float");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("Hop");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsOne("BrewHelper.Data.Entities.Mash", "Mash", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<double>("GrainTemp")
                                .HasColumnType("float");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Version")
                                .HasColumnType("int");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");

                            b1.OwnsMany("BrewHelper.Data.Entities.MashStep", "MashSteps", b2 =>
                                {
                                    b2.Property<long>("MashRecipeId")
                                        .HasColumnType("bigint");

                                    b2.Property<long>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<long>("Id"), 1L, 1);

                                    b2.Property<double?>("InfuseAmount")
                                        .HasColumnType("float");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Notes")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<double>("StepTemp")
                                        .HasColumnType("float");

                                    b2.Property<double>("StepTime")
                                        .HasColumnType("float");

                                    b2.Property<int>("Type")
                                        .HasColumnType("int");

                                    b2.Property<int>("Version")
                                        .HasColumnType("int");

                                    b2.HasKey("MashRecipeId", "Id");

                                    b2.ToTable("MashStep");

                                    b2.WithOwner()
                                        .HasForeignKey("MashRecipeId");
                                });

                            b1.Navigation("MashSteps");
                        });

                    b.OwnsMany("BrewHelper.Data.Entities.Misc", "Miscs", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<double>("Amount")
                                .HasColumnType("float");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Time")
                                .HasColumnType("float");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.Property<int>("Use")
                                .HasColumnType("int");

                            b1.Property<int>("Version")
                                .HasColumnType("int");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("Misc");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsOne("BrewHelper.Data.Entities.Style", "Style", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Category")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CategoryNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("ColorMax")
                                .HasColumnType("float");

                            b1.Property<double>("ColorMin")
                                .HasColumnType("float");

                            b1.Property<double>("IBU_Max")
                                .HasColumnType("float");

                            b1.Property<double>("IBU_Min")
                                .HasColumnType("float");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("OG_Max")
                                .HasColumnType("float");

                            b1.Property<double>("OG_Min")
                                .HasColumnType("float");

                            b1.Property<string>("StyleGuide")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StyleLetter")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.Property<int>("Version")
                                .HasColumnType("int");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsMany("BrewHelper.Data.Entities.Water", "Waters", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<double>("Amount")
                                .HasColumnType("float");

                            b1.Property<double>("Bicarbonate")
                                .HasColumnType("float");

                            b1.Property<double>("Calcium")
                                .HasColumnType("float");

                            b1.Property<double>("Chloride")
                                .HasColumnType("float");

                            b1.Property<double>("Magnesium")
                                .HasColumnType("float");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Sodium")
                                .HasColumnType("float");

                            b1.Property<double>("Sulfate")
                                .HasColumnType("float");

                            b1.Property<int>("Version")
                                .HasColumnType("int");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("Water");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsMany("BrewHelper.Data.Entities.Yeast", "Yeasts", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<double>("Amount")
                                .HasColumnType("float");

                            b1.Property<int>("Form")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.Property<int>("Version")
                                .HasColumnType("int");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("Yeast");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.Navigation("Fermentables");

                    b.Navigation("Hops");

                    b.Navigation("Mash")
                        .IsRequired();

                    b.Navigation("Miscs");

                    b.Navigation("Style")
                        .IsRequired();

                    b.Navigation("Waters");

                    b.Navigation("Yeasts");
                });
#pragma warning restore 612, 618
        }
    }
}
