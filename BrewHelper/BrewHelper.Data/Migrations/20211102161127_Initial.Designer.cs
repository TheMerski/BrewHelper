// <auto-generated />
using System;
using BrewHelper.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BrewHelper.Data.Migrations
{
    [DbContext(typeof(BrewhelperContext))]
    [Migration("20211102161127_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BrewHelper.Data.Entities.BrewLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AlcoholPercentage")
                        .HasColumnType("float");

                    b.Property<long?>("BoilingLogId")
                        .HasColumnType("bigint");

                    b.Property<double?>("EBC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EndSG")
                        .HasColumnType("int");

                    b.Property<double?>("IBU")
                        .HasColumnType("float");

                    b.Property<long?>("MashingLogId")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RecipeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StartSG")
                        .HasColumnType("int");

                    b.Property<long?>("YeastingLogId")
                        .HasColumnType("bigint");

                    b.Property<double?>("Yield")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BoilingLogId");

                    b.HasIndex("MashingLogId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("YeastingLogId");

                    b.ToTable("BrewLogs");
                });

            modelBuilder.Entity("BrewHelper.Data.Entities.Ingredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InStock")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("BrewHelper.Data.Entities.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AlcoholPercentage")
                        .HasColumnType("float");

                    b.Property<long?>("BoilingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EBC")
                        .HasColumnType("float");

                    b.Property<int>("EndSG")
                        .HasColumnType("int");

                    b.Property<double>("IBU")
                        .HasColumnType("float");

                    b.Property<double>("MashWater")
                        .HasColumnType("float");

                    b.Property<long?>("MashingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ReadyAfter")
                        .HasColumnType("bigint");

                    b.Property<double>("RinseWater")
                        .HasColumnType("float");

                    b.Property<int>("StartSG")
                        .HasColumnType("int");

                    b.Property<long?>("YeastingId")
                        .HasColumnType("bigint");

                    b.Property<int>("Yield")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoilingId");

                    b.HasIndex("MashingId");

                    b.HasIndex("YeastingId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("BrewHelper.Data.Entities.RecipeStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Temperature")
                        .HasColumnType("float");

                    b.Property<long>("Time")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("RecipeSteps");
                });

            modelBuilder.Entity("BrewHelper.Data.Entities.StepLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StepLogs");
                });

            modelBuilder.Entity("BrewHelper.Data.Entities.BrewLog", b =>
                {
                    b.HasOne("BrewHelper.Data.Entities.StepLog", "BoilingLog")
                        .WithMany()
                        .HasForeignKey("BoilingLogId");

                    b.HasOne("BrewHelper.Data.Entities.StepLog", "MashingLog")
                        .WithMany()
                        .HasForeignKey("MashingLogId");

                    b.HasOne("BrewHelper.Data.Entities.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrewHelper.Data.Entities.StepLog", "YeastingLog")
                        .WithMany()
                        .HasForeignKey("YeastingLogId");

                    b.Navigation("BoilingLog");

                    b.Navigation("MashingLog");

                    b.Navigation("Recipe");

                    b.Navigation("YeastingLog");
                });

            modelBuilder.Entity("BrewHelper.Data.Entities.Recipe", b =>
                {
                    b.HasOne("BrewHelper.Data.Entities.RecipeStep", "Boiling")
                        .WithMany()
                        .HasForeignKey("BoilingId");

                    b.HasOne("BrewHelper.Data.Entities.RecipeStep", "Mashing")
                        .WithMany()
                        .HasForeignKey("MashingId");

                    b.HasOne("BrewHelper.Data.Entities.RecipeStep", "Yeasting")
                        .WithMany()
                        .HasForeignKey("YeastingId");

                    b.Navigation("Boiling");

                    b.Navigation("Mashing");

                    b.Navigation("Yeasting");
                });

            modelBuilder.Entity("BrewHelper.Data.Entities.RecipeStep", b =>
                {
                    b.OwnsMany("BrewHelper.Data.Entities.RecipeIngredient", "Ingredients", b1 =>
                        {
                            b1.Property<long>("RecipeStepId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<long>("AddAfter")
                                .HasColumnType("bigint");

                            b1.Property<long>("IngredientId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Weight")
                                .HasColumnType("int");

                            b1.HasKey("RecipeStepId", "Id");

                            b1.HasIndex("IngredientId");

                            b1.ToTable("RecipeIngredient");

                            b1.HasOne("BrewHelper.Data.Entities.Ingredient", "Ingredient")
                                .WithMany()
                                .HasForeignKey("IngredientId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("RecipeStepId");

                            b1.Navigation("Ingredient");
                        });

                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("BrewHelper.Data.Entities.StepLog", b =>
                {
                    b.OwnsMany("BrewHelper.Data.Entities.Measurement", "PhMeasurements", b1 =>
                        {
                            b1.Property<long>("StepLogId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Value")
                                .HasColumnType("float");

                            b1.HasKey("StepLogId", "Id");

                            b1.ToTable("StepLogs_PhMeasurements");

                            b1.WithOwner()
                                .HasForeignKey("StepLogId");
                        });

                    b.OwnsMany("BrewHelper.Data.Entities.Measurement", "SgMeasurements", b1 =>
                        {
                            b1.Property<long>("StepLogId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Value")
                                .HasColumnType("float");

                            b1.HasKey("StepLogId", "Id");

                            b1.ToTable("StepLogs_SgMeasurements");

                            b1.WithOwner()
                                .HasForeignKey("StepLogId");
                        });

                    b.OwnsMany("BrewHelper.Data.Entities.Measurement", "TemperatureMeasurements", b1 =>
                        {
                            b1.Property<long>("StepLogId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Value")
                                .HasColumnType("float");

                            b1.HasKey("StepLogId", "Id");

                            b1.ToTable("StepLogs_TemperatureMeasurements");

                            b1.WithOwner()
                                .HasForeignKey("StepLogId");
                        });

                    b.Navigation("PhMeasurements");

                    b.Navigation("SgMeasurements");

                    b.Navigation("TemperatureMeasurements");
                });
#pragma warning restore 612, 618
        }
    }
}
